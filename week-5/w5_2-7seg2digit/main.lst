CCS PCM C Compiler, Version 5.007, 61971               11-Nis-24 15:43

               Filename:   C:\Users\Onur\Documents\GitHub\embedded-system_PIC\week-5\w5_2-7seg2digit\main.lst

               ROM used:   165 words (2%)
                           Largest free fragment is 2048
               RAM used:   19 (5%) at main() level
                           21 (6%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   02E
0003:  NOP
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
0004:  MOVF   2E,W
0005:  CLRF   78
0006:  SUBWF  2D,W
0007:  BTFSC  03.0
0008:  GOTO   00C
0009:  MOVF   2D,W
000A:  MOVWF  77
000B:  GOTO   018
000C:  CLRF   77
000D:  MOVLW  08
000E:  MOVWF  2F
000F:  RLF    2D,F
0010:  RLF    77,F
0011:  MOVF   2E,W
0012:  SUBWF  77,W
0013:  BTFSC  03.0
0014:  MOVWF  77
0015:  RLF    78,F
0016:  DECFSZ 2F,F
0017:  GOTO   00F
0018:  RETURN
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4000000) 
....................  
....................  
.................... #fuses XT,NOWDT,NOPROTECT,NOBROWNOUT,NOLVP,NOPUT,NOWRT,NODEBUG 
....................  
.................... #use delay(clock=4M) 
0019:  MOVLW  2D
001A:  MOVWF  04
001B:  BCF    03.7
001C:  MOVF   00,W
001D:  BTFSC  03.2
001E:  GOTO   02D
001F:  MOVLW  01
0020:  MOVWF  78
0021:  CLRF   77
0022:  DECFSZ 77,F
0023:  GOTO   022
0024:  DECFSZ 78,F
0025:  GOTO   021
0026:  MOVLW  4A
0027:  MOVWF  77
0028:  DECFSZ 77,F
0029:  GOTO   028
002A:  GOTO   02B
002B:  DECFSZ 00,F
002C:  GOTO   01F
002D:  RETURN
....................  
.................... #define display_2 pin_a0 
.................... #define display_1 pin_a1 
....................  
.................... int birler=0,onlar=0,sayi=0; 
.................... int sayilar []={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0xFF,0xEF}; 
*
003B:  MOVLW  3F
003C:  BCF    03.5
003D:  MOVWF  23
003E:  MOVLW  06
003F:  MOVWF  24
0040:  MOVLW  5B
0041:  MOVWF  25
0042:  MOVLW  4F
0043:  MOVWF  26
0044:  MOVLW  66
0045:  MOVWF  27
0046:  MOVLW  6D
0047:  MOVWF  28
0048:  MOVLW  7D
0049:  MOVWF  29
004A:  MOVLW  07
004B:  MOVWF  2A
004C:  MOVLW  FF
004D:  MOVWF  2B
004E:  MOVLW  EF
004F:  MOVWF  2C
....................  
.................... void main() 
*
002E:  CLRF   20
002F:  CLRF   21
0030:  CLRF   22
0031:  BSF    03.5
0032:  BSF    1F.0
0033:  BSF    1F.1
0034:  BSF    1F.2
0035:  BCF    1F.3
0036:  MOVLW  07
0037:  MOVWF  1C
0038:  BCF    03.7
0039:  MOVLW  1F
003A:  ANDWF  03,F
.................... { 
....................    set_tris_a(0x00); 
*
0050:  MOVLW  00
0051:  BSF    03.5
0052:  MOVWF  05
....................    set_tris_b(0x00); 
0053:  MOVWF  06
....................    output_a(0x03); 
0054:  CLRF   05
0055:  MOVLW  03
0056:  BCF    03.5
0057:  MOVWF  05
....................    output_b(0x00); 
0058:  BSF    03.5
0059:  CLRF   06
005A:  BCF    03.5
005B:  CLRF   06
....................    output_low(display_1); 
005C:  BSF    03.5
005D:  BCF    05.1
005E:  BCF    03.5
005F:  BCF    05.1
....................    output_low(display_2); 
0060:  BSF    03.5
0061:  BCF    05.0
0062:  BCF    03.5
0063:  BCF    05.0
....................  
....................    while(TRUE) 
....................    { 
....................       //TODO: User Code 
....................        
....................       birler=sayi%10; 
0064:  MOVF   22,W
0065:  MOVWF  2D
0066:  MOVLW  0A
0067:  MOVWF  2E
0068:  CALL   004
0069:  MOVF   77,W
006A:  MOVWF  20
....................       onlar=sayi/10; 
006B:  MOVF   22,W
006C:  MOVWF  2D
006D:  MOVLW  0A
006E:  MOVWF  2E
006F:  CALL   004
0070:  MOVF   78,W
0071:  MOVWF  21
....................       output_low(display_2); 
0072:  BSF    03.5
0073:  BCF    05.0
0074:  BCF    03.5
0075:  BCF    05.0
....................       output_b(sayilar[birler]); 
0076:  MOVLW  23
0077:  ADDWF  20,W
0078:  MOVWF  04
0079:  BCF    03.7
007A:  MOVF   00,W
007B:  MOVWF  2D
007C:  BSF    03.5
007D:  CLRF   06
007E:  BCF    03.5
007F:  MOVF   2D,W
0080:  MOVWF  06
....................       //delay_ms(5); 
....................       //biraz hizli sayiyor bunu yavaslatalim. 
....................       //display 1 ve 2 nin aslinda ayni anda yanmadigini bu sayede gorebilirsin 
....................        
....................       delay_ms(50); 
0081:  MOVLW  32
0082:  MOVWF  2D
0083:  CALL   019
....................       output_high(display_2); 
0084:  BSF    03.5
0085:  BCF    05.0
0086:  BCF    03.5
0087:  BSF    05.0
....................        
....................       output_low(display_1); 
0088:  BSF    03.5
0089:  BCF    05.1
008A:  BCF    03.5
008B:  BCF    05.1
....................       output_b(sayilar[onlar]); 
008C:  MOVLW  23
008D:  ADDWF  21,W
008E:  MOVWF  04
008F:  BCF    03.7
0090:  MOVF   00,W
0091:  MOVWF  2D
0092:  BSF    03.5
0093:  CLRF   06
0094:  BCF    03.5
0095:  MOVF   2D,W
0096:  MOVWF  06
....................       //delay_ms(5); 
....................       delay_ms(50); 
0097:  MOVLW  32
0098:  MOVWF  2D
0099:  CALL   019
....................       output_high(display_1); 
009A:  BSF    03.5
009B:  BCF    05.1
009C:  BCF    03.5
009D:  BSF    05.1
....................        
....................        
....................       sayi++; 
009E:  INCF   22,F
....................       if(sayi==100)sayi=0; 
009F:  MOVF   22,W
00A0:  SUBLW  64
00A1:  BTFSC  03.2
00A2:  CLRF   22
00A3:  GOTO   064
....................        
....................    } 
....................  
.................... } 
00A4:  SLEEP

Configuration Fuses:
   Word  1: 3F39   XT NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
